{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\src\\\\components\\\\Form\\\\LoginForm.js\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useHistory } from \"react-router-dom\";\n\nconst TextFieldEmail = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const handleClick = () => {\n    let url = \"login?email=\" + email + \"&password=\" + password;\n    fetch(url, {\n      method: \"Get\"\n    }).then(res => res.json()).then(json => {\n      if (json === false) {\n        console.log(\"Wrong email and / or password, please try again.\");\n        alert(\"Wrong email and / or password, please try again.\");\n      } else {\n        history.push(\"/dashboard/\" + email);\n        console.log(window.location.pathname.replace(\"/dashboard/\", \"\"));\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    autoComplete: \"current-email\",\n    autoFocus: true,\n    value: email,\n    onChange: event => {\n      setEmail(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    autoFocus: true,\n    value: password,\n    onChange: event => {\n      setPassword(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"1.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\" //  className={classes.submit}\n    ,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Sign In\"));\n};\n\nexport default TextFieldEmail;","map":{"version":3,"sources":["C:/Users/Impasse/Documents/workspace-spring-tool-suite-4-4.9.0.RELEASE/Museum/frontend/src/components/Form/LoginForm.js"],"names":["React","useState","Button","TextField","useHistory","TextFieldEmail","email","setEmail","password","setPassword","history","handleClick","url","fetch","method","then","res","json","console","log","alert","push","window","location","pathname","replace","event","target","value","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,OAAO,GAAGN,UAAU,EAA1B;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxB,QAAIC,GAAG,GAAG,iBAAiBN,KAAjB,GAAyB,YAAzB,GAAwCE,QAAlD;AAEAK,IAAAA,KAAK,CAACD,GAAD,EAAM;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAN,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,UAAIA,IAAI,KAAK,KAAb,EAAoB;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACAC,QAAAA,KAAK,CAAC,kDAAD,CAAL;AACD,OAHD,MAGO;AACLV,QAAAA,OAAO,CAACW,IAAR,CAAa,gBAAgBf,KAA7B;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,aAAjC,EAAgD,EAAhD,CAAZ;AACD;AACF,KAVH;AAWD,GAdD;;AAgBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,YAAY,EAAC,eAPf;AAQE,IAAA,SAAS,MARX;AASE,IAAA,KAAK,EAAEnB,KATT;AAUE,IAAA,QAAQ,EAAGoB,KAAD,IAAW;AACnBnB,MAAAA,QAAQ,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,KAZH,CAYK;AAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAeE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,IAAI,EAAC,UANP;AAOE,IAAA,EAAE,EAAC,UAPL;AAQE,IAAA,YAAY,EAAC,kBARf;AASE,IAAA,SAAS,MATX;AAUE,IAAA,KAAK,EAAEpB,QAVT;AAWE,IAAA,QAAQ,EAAGkB,KAAD,IAAW;AACnBjB,MAAAA,WAAW,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,KAbH,CAaK;AAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eA8BE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,eA+BE,oBAAC,MAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR,CAIE;AAJF;AAKE,IAAA,OAAO,EAAElB,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA/BF,CADF;AA2CD,CAhED;;AAiEA,eAAeN,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TextFieldEmail = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    let url = \"login?email=\" + email + \"&password=\" + password;\r\n\r\n    fetch(url, { method: \"Get\" })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json === false) {\r\n          console.log(\"Wrong email and / or password, please try again.\");\r\n          alert(\"Wrong email and / or password, please try again.\");\r\n        } else {\r\n          history.push(\"/dashboard/\" + email);\r\n          console.log(window.location.pathname.replace(\"/dashboard/\", \"\"))          \r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        autoComplete=\"current-email\"\r\n        autoFocus\r\n        value={email}\r\n        onChange={(event) => {\r\n          setEmail(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        id=\"password\"\r\n        autoComplete=\"current-password\"\r\n        autoFocus\r\n        value={password}\r\n        onChange={(event) => {\r\n          setPassword(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <div style={{ padding: \"1.5%\" }}></div>\r\n      <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        //  className={classes.submit}\r\n        onClick={handleClick}\r\n      >\r\n        Sign In\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\nexport default TextFieldEmail;\r\n"]},"metadata":{},"sourceType":"module"}