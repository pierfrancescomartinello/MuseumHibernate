{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\src\\\\components\\\\Form\\\\ConfirmYoungTicketForm.js\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst TextFieldEmail = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        visitDate = _useState2[0],\n        setDate = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        password = _useState6[0],\n        setPassword = _useState6[1]; //const history = useHistory();\n\n\n  const handleClick = () => {\n    // sends a GET request to verify credentials, then tries to complete the purchase\n    let signInURL = \"login?email=\" + email + \"&password=\" + password;\n    fetch(signInURL, {\n      method: \"GET\"\n    }).then(res => res.json()).then(json => {\n      if (json === false) {\n        console.log(\"Wrong email and / or password, please try again.\");\n        alert(\"Wrong email and / or password, please try again.\");\n      } else {\n        let visitorIdURL = \"login/visitorId?email=\" + email;\n        fetch(visitorIdURL, {\n          method: \"GET\"\n        }).then(res => res.json()).then(json => {\n          if (json[0] === null) console.log(\"No visitor is registered to this email address.\");else {\n            let visitorId = json[0];\n            console.log(\"Logged in.\");\n            let url = \"/api/ticket\";\n            let requestOptions = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                ticketType: \"Young\",\n                visitDate: visitDate,\n                purchaseDate: new Date().toJSON().slice(0, 10).replace(/-/g, \"-\").toString(),\n                usable: 1,\n                visitor: visitorId,\n                ticketPrice: 5.0\n              })\n            };\n            fetch(url, requestOptions).then(res => res.json()).then(json => {\n              if (json === false) console.log(\"Something went wrong.\");else {\n                alert(\"Young ticket succesfully bought!\"); //history.push(\"/\")\n              }\n            });\n          }\n        });\n      }\n    });\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"visitDate\",\n    label: \"Visit date\",\n    autoComplete: \"current-date\",\n    autoFocus: true,\n    value: visitDate,\n    onChange: event => {\n      setDate(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    autoComplete: \"current-email\",\n    autoFocus: true,\n    value: email,\n    onChange: event => {\n      setEmail(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    autoFocus: true,\n    value: password,\n    onChange: event => {\n      setPassword(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      padding: \"1.5%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\" //  className={classes.submit}\n    ,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Sign In\"));\n};\n\nexport default TextFieldEmail;","map":{"version":3,"sources":["C:/Users/Impasse/Documents/workspace-spring-tool-suite-4-4.9.0.RELEASE/Museum/frontend/src/components/Form/ConfirmYoungTicketForm.js"],"names":["React","useState","Button","TextField","TextFieldEmail","visitDate","setDate","email","setEmail","password","setPassword","handleClick","signInURL","fetch","method","then","res","json","console","log","alert","visitorIdURL","visitorId","url","requestOptions","headers","body","JSON","stringify","ticketType","purchaseDate","Date","toJSON","slice","replace","toString","usable","visitor","ticketPrice","event","target","value","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst TextFieldEmail = () => {\r\n  const [visitDate, setDate] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  //const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    // sends a GET request to verify credentials, then tries to complete the purchase\r\n    let signInURL = \"login?email=\" + email + \"&password=\" + password;\r\n    fetch(signInURL, { method: \"GET\" })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n\r\n        if (json === false) {\r\n          console.log(\"Wrong email and / or password, please try again.\");\r\n          alert(\"Wrong email and / or password, please try again.\");\r\n        } else {\r\n          let visitorIdURL = \"login/visitorId?email=\" + email;\r\n\r\n          fetch(visitorIdURL, { method: \"GET\" })\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n\r\n              if (json[0] === null)\r\n                console.log(\"No visitor is registered to this email address.\");\r\n              else {\r\n                let visitorId = json[0];\r\n                console.log(\"Logged in.\");\r\n\r\n                let url = \"/api/ticket\";\r\n                let requestOptions = {\r\n                  method: \"POST\",\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                  body: JSON.stringify({\r\n                    ticketType: \"Young\",\r\n                    visitDate: visitDate,\r\n                    purchaseDate: new Date()\r\n                      .toJSON()\r\n                      .slice(0, 10)\r\n                      .replace(/-/g, \"-\")\r\n                      .toString(),\r\n                    usable: 1,\r\n                    visitor: visitorId, \r\n                    ticketPrice: 5.0,\r\n                  }),\r\n                };\r\n\r\n                fetch(url, requestOptions)\r\n                  .then((res) => res.json())\r\n                  .then((json) => {\r\n\r\n                    if (json === false) console.log(\"Something went wrong.\");\r\n                    else {\r\n                      alert(\"Young ticket succesfully bought!\");\r\n                      //history.push(\"/\")\r\n                    }\r\n                  });\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"visitDate\"\r\n        label=\"Visit date\"\r\n        autoComplete=\"current-date\"\r\n        autoFocus\r\n        value={visitDate}\r\n        onChange={(event) => {\r\n          setDate(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        autoComplete=\"current-email\"\r\n        autoFocus\r\n        value={email}\r\n        onChange={(event) => {\r\n          setEmail(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        id=\"password\"\r\n        autoComplete=\"current-password\"\r\n        autoFocus\r\n        value={password}\r\n        onChange={(event) => {\r\n          setPassword(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <div style={{ padding: \"1.5%\" }}></div>\r\n      <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        //  className={classes.submit}\r\n        onClick={handleClick}\r\n      >\r\n        Sign In\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\nexport default TextFieldEmail;\r\n"]},"metadata":{},"sourceType":"module"}