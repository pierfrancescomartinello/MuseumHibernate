{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\src\\\\components\\\\Form\\\\SignupForm.js\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useHistory } from \"react-router-dom\";\n\nconst TextFieldEmail = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        surname = _useState4[0],\n        setSurname = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        dob = _useState6[0],\n        setDob = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    // POST request to /api/account, email and password only\n    let url = \"/api/account\";\n    let requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        isLoggedIn: 0\n      })\n    };\n    fetch(url, requestOptions).then(res => res.json()); // POST request to /api/visitor\n\n    url = \"/api/visitor\";\n    requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        surname: surname,\n        dateOfBirth: dob,\n        dateOfSignUp: new Date().toJSON().slice(0, 10).replace(/-/g, \"-\").toString(),\n        email: email\n      })\n    };\n    fetch(url, requestOptions).then(res => res.json()).then(json => {\n      alert(\"Succesful signup!\");\n      history.push(\"/\");\n    });\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"name\",\n    label: \"Name\",\n    type: \"name\",\n    autoComplete: \"current-name\",\n    autoFocus: true,\n    value: name,\n    onChange: event => {\n      setName(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"surname\",\n    label: \"Surname\",\n    autoComplete: \"current-surname\",\n    autoFocus: true,\n    value: surname,\n    onChange: event => {\n      setSurname(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"dob\",\n    label: \"Date of birth\",\n    autoComplete: \"current-dob\",\n    autoFocus: true,\n    value: dob,\n    onChange: event => {\n      setDob(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    autoComplete: \"current-email\",\n    autoFocus: true,\n    value: email,\n    onChange: event => {\n      setEmail(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    autoFocus: true,\n    value: password,\n    onChange: event => {\n      setPassword(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      padding: \"1.5%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Sign up\"));\n};\n\nexport default TextFieldEmail;","map":{"version":3,"sources":["C:/Users/Impasse/Documents/workspace-spring-tool-suite-4-4.9.0.RELEASE/Museum/frontend/src/components/Form/SignupForm.js"],"names":["React","useState","Button","TextField","useHistory","TextFieldEmail","name","setName","surname","setSurname","dob","setDob","email","setEmail","password","setPassword","history","handleClick","url","requestOptions","method","headers","body","JSON","stringify","isLoggedIn","fetch","then","res","json","dateOfBirth","dateOfSignUp","Date","toJSON","slice","replace","toString","alert","push","event","target","value","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TextFieldEmail = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    // POST request to /api/account, email and password only\r\n    let url = \"/api/account\";\r\n    let requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n        isLoggedIn: 0,\r\n      }),\r\n    };\r\n\r\n    fetch(url, requestOptions).then((res) => res.json());\r\n\r\n    // POST request to /api/visitor\r\n    url = \"/api/visitor\";\r\n    requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        surname: surname,\r\n        dateOfBirth: dob,\r\n        dateOfSignUp: new Date()\r\n          .toJSON()\r\n          .slice(0, 10)\r\n          .replace(/-/g, \"-\")\r\n          .toString(),\r\n        email: email,\r\n      }),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        alert(\"Succesful signup!\");\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"name\"\r\n        label=\"Name\"\r\n        type=\"name\"\r\n        autoComplete=\"current-name\"\r\n        autoFocus\r\n        value={name}\r\n        onChange={(event) => {\r\n          setName(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"surname\"\r\n        label=\"Surname\"\r\n        autoComplete=\"current-surname\"\r\n        autoFocus\r\n        value={surname}\r\n        onChange={(event) => {\r\n          setSurname(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"dob\"\r\n        label=\"Date of birth\"\r\n        autoComplete=\"current-dob\"\r\n        autoFocus\r\n        value={dob}\r\n        onChange={(event) => {\r\n          setDob(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        autoComplete=\"current-email\"\r\n        autoFocus\r\n        value={email}\r\n        onChange={(event) => {\r\n          setEmail(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        id=\"password\"\r\n        autoComplete=\"current-password\"\r\n        autoFocus\r\n        value={password}\r\n        onChange={(event) => {\r\n          setPassword(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <div style={{ padding: \"1.5%\" }}></div>\r\n      <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n      >\r\n        Sign up\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\nexport default TextFieldEmail;\r\n"]},"metadata":{},"sourceType":"module"}