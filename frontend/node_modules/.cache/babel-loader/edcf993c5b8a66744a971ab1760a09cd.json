{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\src\\\\pages\\\\EmployeesTable.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 600\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: `10px`,\n    height: \"100%\",\n    width: \"99%\",\n    marginTop: theme.spacing(7)\n  },\n  link: {\n    color: \"rgba(0,0,0,0.65)\",\n    textDecoration: \"none\",\n    marginLeft: \"10%\",\n    alignSelf: \"flex-start\",\n    \"&:hover\": {\n      color: \"rgba(0,0,0,1)\"\n    }\n  }\n}));\nexport default function EmployeesTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        data = _React$useState2[0],\n        upDateData = _React$useState2[1];\n\n  const _React$useState3 = React.useState(true),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        firstLoad = _React$useState4[0],\n        setLoad = _React$useState4[1];\n\n  let isLoading = true;\n\n  async function sampleFunc() {\n    let response = await fetch(\"/api/employee\");\n    let body = await response.json();\n    upDateData(body);\n  }\n\n  if (firstLoad) {\n    sampleFunc();\n    setLoad(false);\n  }\n\n  if (data.length > 0) isLoading = false;\n  return React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(GroupIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Employee Directory\"), isLoading ? React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }) : React.createElement(TableContainer, {\n    style: {\n      width: \"80%\",\n      margin: \"0 10px\"\n    },\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"ID\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Surname\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Date of birth\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Date of signup\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Salary\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Working hours\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Email\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Curator\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Director\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Salesperson\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, data === null || data === void 0 ? void 0 : data.map(row => React.createElement(TableRow, {\n    key: row.employeeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, row.employeeId), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, row.name), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, row.surname), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, row.dob), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, row.dateOfSignup), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, row.salary), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, row.workingHours), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, row.email), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, row.isCurator), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, row.isDirector), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, row.isSalesperson)))))), React.createElement(Link, {\n    className: classes.link,\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \" \", React.createElement(Typography, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"\\u2190 Head back to save data\"), \" \"));\n}","map":{"version":3,"sources":["C:/Users/Impasse/Documents/workspace-spring-tool-suite-4-4.9.0.RELEASE/Museum/frontend/src/pages/EmployeesTable.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Avatar","GroupIcon","Link","Typography","CircularProgress","useStyles","theme","table","minWidth","avatar","margin","spacing","backgroundColor","palette","secondary","main","paper","display","flexDirection","justifyContent","alignItems","height","width","marginTop","link","color","textDecoration","marginLeft","alignSelf","EmployeesTable","classes","useState","data","upDateData","firstLoad","setLoad","isLoading","sampleFunc","response","fetch","body","json","length","map","row","employeeId","name","surname","dob","dateOfSignup","salary","workingHours","email","isCurator","isDirector","isSalesperson"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 600,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: `10px`,\n    height: \"100%\",\n    width: \"99%\",\n    marginTop: theme.spacing(7),\n  },\n  link: {\n    color: \"rgba(0,0,0,0.65)\",\n    textDecoration: \"none\",\n    marginLeft: \"10%\",\n    alignSelf: \"flex-start\",\n    \"&:hover\": {\n      color: \"rgba(0,0,0,1)\",\n    },\n  },\n}));\n\nexport default function EmployeesTable() {\n  const classes = useStyles();\n\n  const [data, upDateData] = React.useState([]);\n  const [firstLoad, setLoad] = React.useState(true);\n  let isLoading = true;\n\n  async function sampleFunc() {\n    let response = await fetch(\"/api/employee\");\n    let body = await response.json();\n    upDateData(body);\n  }\n\n  if (firstLoad) {\n    sampleFunc();\n    setLoad(false);\n  }\n\n  if (data.length > 0) isLoading = false;\n\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n        <GroupIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Employee Directory\n      </Typography>\n\n      {isLoading ? (\n        <CircularProgress />\n      ) : (\n        <TableContainer\n          style={{ width: \"80%\", margin: \"0 10px\" }}\n          component={Paper}\n        >\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">ID</TableCell>\n                <TableCell align=\"center\">Name</TableCell>\n                <TableCell align=\"center\">Surname</TableCell>\n                <TableCell align=\"center\">Date of birth</TableCell>\n                <TableCell align=\"center\">Date of signup</TableCell>\n                <TableCell align=\"center\">Salary</TableCell>\n                <TableCell align=\"center\">Working hours</TableCell>\n                <TableCell align=\"center\">Email</TableCell>\n                <TableCell align=\"center\">Curator</TableCell>\n                <TableCell align=\"center\">Director</TableCell>\n                <TableCell align=\"center\">Salesperson</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data?.map((row) => (\n                <TableRow key={row.employeeId}>\n                  <TableCell align=\"center\">{row.employeeId}</TableCell>\n                  <TableCell align=\"center\">{row.name}</TableCell>\n                  <TableCell align=\"center\">{row.surname}</TableCell>\n                  <TableCell align=\"center\">{row.dob}</TableCell>\n                  <TableCell align=\"center\">{row.dateOfSignup}</TableCell>\n                  <TableCell align=\"center\">{row.salary}</TableCell>\n                  <TableCell align=\"center\">{row.workingHours}</TableCell>\n                  <TableCell align=\"center\">{row.email}</TableCell>\n                  <TableCell align=\"center\">{row.isCurator}</TableCell>\n                  <TableCell align=\"center\">{row.isDirector}</TableCell>\n                  <TableCell align=\"center\">{row.isSalesperson}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n      <Link className={classes.link} to=\"/\">\n        {\" \"}\n        <Typography align=\"left\">\n          &#x2190; Head back to save data\n        </Typography>{\" \"}\n      </Link>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}