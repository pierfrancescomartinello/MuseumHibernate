{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\src\\\\components\\\\Form\\\\SignupForm.js\";\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router-dom\";\n\nconst TextFieldEmail = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        surname = _useState4[0],\n        setSurname = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        dob = _useState6[0],\n        setDob = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    let url = \"/api/account\";\n    let requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"email\": email,\n        \"password\": password,\n        \"isLoggedIn\": 0\n      })\n    };\n    fetch(url, requestOptions).then(res => res.json()).then(json => {\n      alert(\"Succesful signup!\");\n      history.push(\"/\");\n    });\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    halfWidth: true,\n    name: \"name\",\n    label: \"Name\",\n    type: \"name\",\n    autoComplete: \"current-name\",\n    autoFocus: true,\n    value: name,\n    onChange: event => {\n      setName(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    halfWidth: true,\n    marginLeft: \"50px\",\n    name: \"surname\",\n    label: \"Surname\",\n    autoComplete: \"current-surname\",\n    autoFocus: true,\n    value: surname,\n    onChange: event => {\n      setSurname(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"dob\",\n    label: \"Date of birth\",\n    autoComplete: \"current-dob\",\n    autoFocus: true,\n    value: dob,\n    onChange: event => {\n      setDob(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    autoComplete: \"current-email\",\n    autoFocus: true,\n    value: email,\n    onChange: event => {\n      setEmail(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    autoFocus: true,\n    value: password,\n    onChange: event => {\n      setPassword(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      padding: \"1.5%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Sign up\"));\n};\n\nexport default TextFieldEmail;","map":{"version":3,"sources":["C:/Users/Impasse/Documents/workspace-spring-tool-suite-4-4.9.0.RELEASE/Museum/frontend/src/components/Form/SignupForm.js"],"names":["React","useState","Button","TextField","useHistory","TextFieldEmail","name","setName","surname","setSurname","dob","setDob","email","setEmail","password","setPassword","history","handleClick","url","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","alert","push","event","target","value","padding"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TextFieldEmail = () => {\r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [dob, setDob] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n\r\n    const handleClick = () => {\r\n      let url = \"/api/account\";\r\n      let requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ \"email\": email, \"password\": password, \"isLoggedIn\": 0 })\r\n      }\r\n\r\n      fetch(url, requestOptions)\r\n          .then(res => res.json())\r\n          .then((json) => {\r\n                alert(\"Succesful signup!\")\r\n                history.push(\"/\")\r\n          });\r\n    };\r\n  \r\n    return (\r\n      <form>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          halfWidth\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          type=\"name\"\r\n          autoComplete=\"current-name\"\r\n          autoFocus\r\n          value={name}\r\n          onChange={(event) => {setName(event.target.value)}} //whenever the text field change, you save the value in state\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          halfWidth\r\n          marginLeft = \"50px\"\r\n          name=\"surname\"\r\n          label=\"Surname\"\r\n          autoComplete=\"current-surname\"\r\n          autoFocus\r\n          value={surname}\r\n          onChange={(event) => {setSurname(event.target.value)}} //whenever the text field change, you save the value in state\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          name=\"dob\"\r\n          label=\"Date of birth\"\r\n          autoComplete=\"current-dob\"\r\n          autoFocus\r\n          value={dob}\r\n          onChange={(event) => {setDob(event.target.value)}} //whenever the text field change, you save the value in state\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          autoComplete=\"current-email\"\r\n          autoFocus\r\n          value={email}\r\n          onChange={(event) => {setEmail(event.target.value)}} //whenever the text field change, you save the value in state\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          autoFocus\r\n          value={password}\r\n          onChange={(event) => {setPassword(event.target.value)}} //whenever the text field change, you save the value in state\r\n         />\r\n        <div style={{padding: \"1.5%\"}}></div>\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleClick}\r\n        >\r\n          Sign up\r\n        </Button>\r\n    </form>\r\n    );\r\n  };\r\n  export default TextFieldEmail;"]},"metadata":{},"sourceType":"module"}