{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\src\\\\components\\\\Form\\\\ConfirmYoungTicketForm.js\";\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router-dom\";\n\nconst TextFieldEmail = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        visitDate = _useState2[0],\n        setDate = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        visitor = _useState4[0],\n        setVisitor = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        password = _useState8[0],\n        setPassword = _useState8[1];\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    // gets the buyer's visitorId\n    // sends a GET request to verify credentials, then tries to complete the purchase\n    let signInURL = \"login?email=\" + email + \"&password=\" + password;\n    fetch(signInURL, {\n      method: \"GET\"\n    }).then(res => res.json()).then(json => {\n      if (json === false) {\n        console.log(\"Wrong email and / or password, please try again.\");\n        alert(\"Wrong email and / or password, please try again.\");\n      } else {\n        let visitorId;\n        let visitorIdURL = \"login/visitorId?email=\" + email;\n        fetch(visitorIdURL, {\n          method: \"GET\"\n        }).then(res => res.json()).then(json => {\n          if (json === null) console.log(\"No visitor is registered to this email address.\");else {\n            console.log(res[0]);\n            console.log(\"Logged in.\");\n            let url = \"/api/ticket\";\n            let requestOptions = {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                \"ticketType\": \"Young\",\n                \"visitDate\": visitDate,\n                \"purchaseDate\": new Date().toJSON().slice(0, 10).replace(/-/g, '-').toString(),\n                \"usable\": 1,\n                \"visitor\": visitor,\n                // devo scrivere una query per prendere il visitorId associato a una email\n                \"ticketPrice\": 5.00\n              })\n            };\n            fetch(url, requestOptions).then(res => res.json()).then(json => {\n              if (json === false) console.log(\"Something went wrong.\");else {\n                alert(\"Young ticket succesfully bought!\"); //history.push(\"/\")\n              }\n            });\n          }\n        });\n      }\n    });\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"visitDate\",\n    label: \"Visit date\",\n    autoComplete: \"current-date\",\n    autoFocus: true,\n    value: visitDate,\n    onChange: event => {\n      setDate(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    autoComplete: \"current-email\",\n    autoFocus: true,\n    value: email,\n    onChange: event => {\n      setEmail(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    autoFocus: true,\n    value: password,\n    onChange: event => {\n      setPassword(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      padding: \"1.5%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\" //  className={classes.submit}\n    ,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Sign In\"));\n};\n\nexport default TextFieldEmail;","map":{"version":3,"sources":["C:/Users/Impasse/Documents/workspace-spring-tool-suite-4-4.9.0.RELEASE/Museum/frontend/src/components/Form/ConfirmYoungTicketForm.js"],"names":["React","useState","Button","TextField","useHistory","TextFieldEmail","visitDate","setDate","visitor","setVisitor","email","setEmail","password","setPassword","history","handleClick","signInURL","fetch","method","then","res","json","console","log","alert","visitorId","visitorIdURL","url","requestOptions","headers","body","JSON","stringify","Date","toJSON","slice","replace","toString","event","target","value","padding"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TextFieldEmail = () => {\r\n  const [visitDate, setDate] = useState('');\r\n  const [visitor, setVisitor] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n\t// gets the buyer's visitorId\r\n  \r\n\t// sends a GET request to verify credentials, then tries to complete the purchase\r\n    let signInURL = \"login?email=\" + email + \"&password=\" + password;\r\n    fetch(signInURL, {method: \"GET\"})\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n          if (json === false) {\r\n                  console.log(\"Wrong email and / or password, please try again.\");\r\n                  alert(\"Wrong email and / or password, please try again.\");\r\n            }\r\n          \telse {\r\n              let visitorId;\r\n              let visitorIdURL = \"login/visitorId?email=\" + email;\r\n              fetch(visitorIdURL, {method: \"GET\"})\r\n              .then(res => res.json())\r\n              .then((json) => {\r\n                if (json === null) \r\n                  console.log(\"No visitor is registered to this email address.\");\r\n                else {\r\n                    console.log(res[0])\r\n                    console.log(\"Logged in.\");\r\n\r\n                    let url = \"/api/ticket\";\r\n                    let requestOptions = {\r\n                      method: 'POST',\r\n                      headers: { 'Content-Type': 'application/json' },\r\n                      body: JSON.stringify({ \r\n                        \"ticketType\": \"Young\", \r\n                        \"visitDate\": visitDate,\r\n                        \"purchaseDate\": new Date().toJSON().slice(0,10).replace(/-/g,'-').toString(),\r\n                        \"usable\": 1,\r\n                        \"visitor\": visitor, // devo scrivere una query per prendere il visitorId associato a una email\r\n                        \"ticketPrice\": 5.00\r\n                      })\r\n                    }\r\n\r\n                    fetch(url, requestOptions)\r\n                    .then(res => res.json())\r\n                    .then((json) => {\r\n                      if (json === false)\r\n                      console.log(\"Something went wrong.\")\r\n                      else {\r\n                      alert(\"Young ticket succesfully bought!\")\r\n                      //history.push(\"/\")\r\n                      }\r\n                    });\r\n                  }\r\n              });\r\n\t\t\t  }\r\n        });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n\t<TextField\r\n\t\tvariant=\"outlined\"\r\n\t\tmargin=\"normal\"\r\n\t\tfullWidth\r\n\t\tname=\"visitDate\"\r\n\t\tlabel=\"Visit date\"\r\n\t\tautoComplete=\"current-date\"\r\n\t\tautoFocus\r\n\t\tvalue={visitDate}\r\n\t\tonChange={(event) => {setDate(event.target.value)}} //whenever the text field change, you save the value in state\r\n\t/>\r\n\t<TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        autoComplete=\"current-email\"\r\n        autoFocus\r\n        value={email}\r\n        onChange={(event) => {setEmail(event.target.value)}} //whenever the text field change, you save the value in state\r\n\t/>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        id=\"password\"\r\n        autoComplete=\"current-password\"\r\n        autoFocus\r\n        value={password}\r\n        onChange={(event) => {setPassword(event.target.value)}} //whenever the text field change, you save the value in state\r\n\t/>\r\n      <div style={{padding: \"1.5%\"}}></div>\r\n      <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      //  className={classes.submit}\r\n        onClick={handleClick}\r\n      >\r\n        Sign In\r\n      </Button>\r\n    </form>\r\n    );\r\n  };\r\n  export default TextFieldEmail;"]},"metadata":{},"sourceType":"module"}