{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\src\\\\components\\\\Form\\\\LoginForm.js\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useHistory } from \"react-router-dom\";\n\nconst TextFieldEmail = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    let url = \"login?email=\" + email + \"&password=\" + password;\n    fetch(url, {\n      method: \"Get\"\n    }).then(res => res.json()).then(json => {\n      if (json === false) {\n        console.log(\"Wrong email and / or password, please try again.\");\n        alert(\"Wrong email and / or password, please try again.\");\n      } else history.push(\"/\");\n    });\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    autoComplete: \"current-email\",\n    autoFocus: true,\n    value: email,\n    onChange: event => {\n      setEmail(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    autoFocus: true,\n    value: password,\n    onChange: event => {\n      setPassword(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      padding: \"1.5%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\" //  className={classes.submit}\n    ,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Sign In\"));\n};\n\nexport default TextFieldEmail;","map":{"version":3,"sources":["C:/Users/Impasse/Documents/workspace-spring-tool-suite-4-4.9.0.RELEASE/Museum/frontend/src/components/Form/LoginForm.js"],"names":["React","useState","Button","TextField","useHistory","TextFieldEmail","email","setEmail","password","setPassword","history","handleClick","url","fetch","method","then","res","json","console","log","alert","push","event","target","value","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA,oBACDJ,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,QACpBK,KADoB;AAAA,QACbC,QADa;;AAAA,qBAEKN,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,QAEpBO,QAFoB;AAAA,QAEVC,WAFU;;AAG3B,QAAMC,OAAO,GAAGN,UAAU,EAA1B;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxB,QAAIC,GAAG,GAAG,iBAAiBN,KAAjB,GAAyB,YAAzB,GAAwCE,QAAlD;AAEAK,IAAAA,KAAK,CAACD,GAAD,EAAM;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAN,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,UAAIA,IAAI,KAAK,KAAb,EAAoB;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACAC,QAAAA,KAAK,CAAC,kDAAD,CAAL;AACD,OAHD,MAGOV,OAAO,CAACW,IAAR,CAAa,GAAb;AACR,KAPH;AAQD,GAXD;;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,YAAY,EAAC,eAPf;AAQE,IAAA,SAAS,MARX;AASE,IAAA,KAAK,EAAEf,KATT;AAUE,IAAA,QAAQ,EAAGgB,KAAD,IAAW;AACnBf,MAAAA,QAAQ,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,KAZH,CAYK;AAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAeE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,IAAI,EAAC,UANP;AAOE,IAAA,EAAE,EAAC,UAPL;AAQE,IAAA,YAAY,EAAC,kBARf;AASE,IAAA,SAAS,MATX;AAUE,IAAA,KAAK,EAAEhB,QAVT;AAWE,IAAA,QAAQ,EAAGc,KAAD,IAAW;AACnBb,MAAAA,WAAW,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,KAbH,CAaK;AAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EA8BE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,EA+BE,oBAAC,MAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR,CAIE;AAJF;AAKE,IAAA,OAAO,EAAEd,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA/BF,CADF;AA2CD,CA7DD;;AA8DA,eAAeN,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TextFieldEmail = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    let url = \"login?email=\" + email + \"&password=\" + password;\r\n\r\n    fetch(url, { method: \"Get\" })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json === false) {\r\n          console.log(\"Wrong email and / or password, please try again.\");\r\n          alert(\"Wrong email and / or password, please try again.\");\r\n        } else history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        autoComplete=\"current-email\"\r\n        autoFocus\r\n        value={email}\r\n        onChange={(event) => {\r\n          setEmail(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        id=\"password\"\r\n        autoComplete=\"current-password\"\r\n        autoFocus\r\n        value={password}\r\n        onChange={(event) => {\r\n          setPassword(event.target.value);\r\n        }} //whenever the text field change, you save the value in state\r\n      />\r\n      <div style={{ padding: \"1.5%\" }}></div>\r\n      <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        //  className={classes.submit}\r\n        onClick={handleClick}\r\n      >\r\n        Sign In\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\nexport default TextFieldEmail;\r\n"]},"metadata":{},"sourceType":"module"}