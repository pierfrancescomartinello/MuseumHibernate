{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Tickets.js\";\nimport React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from \"react-router-dom\";\nexport default function Orders() {\n  const [data, upDateData] = React.useState([]);\n  const [firstLoad, setLoad] = React.useState(true);\n  const [visitorId, setVisitorId] = useState(\"\");\n  let isLoading = true;\n  let email = window.location.pathname.replace(\"/dashboard/\", \"\");\n  let visitorIdURL = fetch(\"/login/userInfo/visitorId?email=\" + email);\n  visitorIdURL.then(visitorIdURL => {\n    return visitorIdURL.json();\n  }).then(visitorIdP => {\n    const visitorIdEpic = visitorIdP[0];\n    setVisitorId(visitorIdEpic);\n  });\n  const ticketsURL = \"/api/visitorTicket?visitorId=\" + visitorId;\n  console.log(ticketsURL);\n\n  async function sampleFunc() {\n    let response = await fetch(ticketsURL);\n    let body = await response.json();\n    upDateData(body);\n  }\n\n  if (firstLoad) {\n    sampleFunc();\n    setLoad(false);\n  }\n\n  if (data.length > 0) isLoading = false;\n  /*\n  visitorIdURL.then(visitorIdURL => {\n    return visitorIdURL.json();\n  }).then(visitorIdP => {\n    const visitorId = visitorIdP[0]\n    setVisitorId(visitorId)\n  }) */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h3\",\n    variant: \"h5\",\n    style: {\n      color: \"#c16b53\",\n      fontWeight: \"bold\",\n      paddingLeft: \"7px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Your tickets\"), /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Surname\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Date of birth\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Date of signup\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Salary\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Working hours\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Curator\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Director\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Salesperson\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, data === null || data === void 0 ? void 0 : data.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.employeeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, row.employeeId), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, row.surname), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, row.dob), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, row.dateOfSignup), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, row.salary), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, row.workingHours), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, row.email), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, row.isCurator), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, row.isDirector), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, row.isSalesperson))))));\n}","map":{"version":3,"sources":["C:/Users/Impasse/Documents/workspace-spring-tool-suite-4-4.9.0.RELEASE/Museum/frontend/src/components/Dashboard/Tickets.js"],"names":["React","useState","Table","TableBody","TableCell","TableHead","TableRow","Typography","AccountBalanceIcon","IconButton","Link","Orders","data","upDateData","firstLoad","setLoad","visitorId","setVisitorId","isLoading","email","window","location","pathname","replace","visitorIdURL","fetch","then","json","visitorIdP","visitorIdEpic","ticketsURL","console","log","sampleFunc","response","body","length","color","fontWeight","paddingLeft","classes","table","map","row","employeeId","name","surname","dob","dateOfSignup","salary","workingHours","isCurator","isDirector","isSalesperson"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBb,KAAK,CAACC,QAAN,CAAe,EAAf,CAA3B;AACA,QAAM,CAACa,SAAD,EAAYC,OAAZ,IAAuBf,KAAK,CAACC,QAAN,CAAe,IAAf,CAA7B;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAIiB,SAAS,GAAG,IAAhB;AAEA,MAAIC,KAAK,GAAIC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,aAAjC,EAAgD,EAAhD,CAAb;AACA,MAAIC,YAAY,GAAGC,KAAK,CAAC,qCAAqCN,KAAtC,CAAxB;AAEAK,EAAAA,YAAY,CAACE,IAAb,CAAkBF,YAAY,IAAI;AAChC,WAAOA,YAAY,CAACG,IAAb,EAAP;AACD,GAFD,EAEGD,IAFH,CAEQE,UAAU,IAAI;AACpB,UAAMC,aAAa,GAAGD,UAAU,CAAC,CAAD,CAAhC;AACAX,IAAAA,YAAY,CAACY,aAAD,CAAZ;AACD,GALD;AAQA,QAAMC,UAAU,GAAG,kCAAkCd,SAArD;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AAEA,iBAAeG,UAAf,GAA4B;AAC1B,QAAIC,QAAQ,GAAG,MAAMT,KAAK,CAACK,UAAD,CAA1B;AACA,QAAIK,IAAI,GAAG,MAAMD,QAAQ,CAACP,IAAT,EAAjB;AACAd,IAAAA,UAAU,CAACsB,IAAD,CAAV;AACD;;AAED,MAAIrB,SAAJ,EAAe;AACbmB,IAAAA,UAAU;AACVlB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAED,MAAIH,IAAI,CAACwB,MAAL,GAAc,CAAlB,EAAqBlB,SAAS,GAAG,KAAZ;AAGrB;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAwC,IAAA,KAAK,EAAE;AAAEmB,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,UAAU,EAAE,MAAhC;AAAwCC,MAAAA,WAAW,EAAE;AAArD,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEC,OAAO,CAACC,KAA1B;AAAiC,kBAAW,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,eAKE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,eAQE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,eASE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,eAUE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,CADN,eAgBM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7B,IADH,aACGA,IADH,uBACGA,IAAI,CAAE8B,GAAN,CAAWC,GAAD,iBACT,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAG,CAACC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BD,GAAG,CAACC,UAA/B,CADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BD,GAAG,CAACE,IAA/B,CAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BF,GAAG,CAACG,OAA/B,CAHF,eAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BH,GAAG,CAACI,GAA/B,CAJF,eAKE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BJ,GAAG,CAACK,YAA/B,CALF,eAME,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BL,GAAG,CAACM,MAA/B,CANF,eAOE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BN,GAAG,CAACO,YAA/B,CAPF,eAQE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,GAAG,CAACxB,KAA/B,CARF,eASE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BwB,GAAG,CAACQ,SAA/B,CATF,eAUE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BR,GAAG,CAACS,UAA/B,CAVF,eAWE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BT,GAAG,CAACU,aAA/B,CAXF,CADD,CADH,CAhBN,CAJF,CADF;AA0CD","sourcesContent":["import React, {useState} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from \"react-router-dom\";\n\nexport default function Orders() {\n  const [data, upDateData] = React.useState([]);\n  const [firstLoad, setLoad] = React.useState(true);\n  const [visitorId, setVisitorId] = useState(\"\");\n  let isLoading = true;\n\n  let email = (window.location.pathname.replace(\"/dashboard/\", \"\"));\n  let visitorIdURL = fetch(\"/login/userInfo/visitorId?email=\" + email);\n\n  visitorIdURL.then(visitorIdURL => {\n    return visitorIdURL.json();\n  }).then(visitorIdP => {\n    const visitorIdEpic = visitorIdP[0]\n    setVisitorId(visitorIdEpic)\n  })\n  \n  \n  const ticketsURL = \"/api/visitorTicket?visitorId=\" + visitorId\n  console.log(ticketsURL)\n  \n  async function sampleFunc() {\n    let response = await fetch(ticketsURL);\n    let body = await response.json();\n    upDateData(body);\n  }\n\n  if (firstLoad) {\n    sampleFunc();\n    setLoad(false);\n  }\n \n  if (data.length > 0) isLoading = false;\n\n\n  /*\n  visitorIdURL.then(visitorIdURL => {\n    return visitorIdURL.json();\n  }).then(visitorIdP => {\n    const visitorId = visitorIdP[0]\n    setVisitorId(visitorId)\n  }) */\n\n  return (\n    <React.Fragment>\n      <Typography component=\"h3\" variant=\"h5\" style={{ color: \"#c16b53\", fontWeight: \"bold\", paddingLeft: \"7px\" }}>\n        Your tickets\n      </Typography>\n      <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">ID</TableCell>\n                <TableCell align=\"center\">Name</TableCell>\n                <TableCell align=\"center\">Surname</TableCell>\n                <TableCell align=\"center\">Date of birth</TableCell>\n                <TableCell align=\"center\">Date of signup</TableCell>\n                <TableCell align=\"center\">Salary</TableCell>\n                <TableCell align=\"center\">Working hours</TableCell>\n                <TableCell align=\"center\">Email</TableCell>\n                <TableCell align=\"center\">Curator</TableCell>\n                <TableCell align=\"center\">Director</TableCell>\n                <TableCell align=\"center\">Salesperson</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data?.map((row) => (\n                <TableRow key={row.employeeId}>\n                  <TableCell align=\"center\">{row.employeeId}</TableCell>\n                  <TableCell align=\"center\">{row.name}</TableCell>\n                  <TableCell align=\"center\">{row.surname}</TableCell>\n                  <TableCell align=\"center\">{row.dob}</TableCell>\n                  <TableCell align=\"center\">{row.dateOfSignup}</TableCell>\n                  <TableCell align=\"center\">{row.salary}</TableCell>\n                  <TableCell align=\"center\">{row.workingHours}</TableCell>\n                  <TableCell align=\"center\">{row.email}</TableCell>\n                  <TableCell align=\"center\">{row.isCurator}</TableCell>\n                  <TableCell align=\"center\">{row.isDirector}</TableCell>\n                  <TableCell align=\"center\">{row.isSalesperson}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}