{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport UserInfo from \"../components/Dashboard/UserInfo\";\nimport Tickets from \"../components/Dashboard/Tickets\";\nconst useStyles = makeStyles(theme => ({\n  appBarSpacer: theme.mixins.toolbar,\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\nexport default function Dashboard() {\n  const classes = useStyles();\n  const email = window.location.pathname.replace(\"/dashboard/\", \"\");\n  console.log(email);\n  let nameURL = \"/login/userInfo/name?email=\" + email;\n  var userInfo = {\n    name: \"\",\n    surname: \"\",\n    visitorId: \"\"\n  };\n  fetch(nameURL, {\n    method: \"GET\"\n  }).then(res => res.json()).then(json => {\n    console.log(json);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    style: {\n      backgroundColor: \"#dac0b8\",\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appBarSpacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12\n    /*md={4} lg={3}*/\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: clsx(classes.paper, classes.fixedHeight),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    name: userInfo.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Tickets, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Box, {\n    pt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Impasse/Documents/workspace-spring-tool-suite-4-4.9.0.RELEASE/Museum/frontend/src/pages/Dashboard.js"],"names":["React","clsx","makeStyles","Box","Container","Grid","Paper","UserInfo","Tickets","useStyles","theme","appBarSpacer","mixins","toolbar","container","paddingTop","spacing","paddingBottom","paper","padding","display","overflow","flexDirection","fixedHeight","height","Dashboard","classes","email","window","location","pathname","replace","console","log","nameURL","userInfo","name","surname","visitorId","fetch","method","then","res","json","root","backgroundColor","minHeight","content"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport UserInfo from \"../components/Dashboard/UserInfo\";\r\nimport Tickets from \"../components/Dashboard/Tickets\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n\r\n  const email = window.location.pathname.replace(\"/dashboard/\", \"\");\r\n  console.log(email);\r\n\r\n  let nameURL = \"/login/userInfo/name?email=\" + email;\r\n\r\n  var userInfo = {\r\n    name: \"\",\r\n    surname: \"\",\r\n    visitorId: \"\",\r\n  }\r\n\r\n  fetch(nameURL, { method: \"GET\" })\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      console.log(json)\r\n    });\r\n\r\n\r\n  return (\r\n    <div className={classes.root} style={{backgroundColor: \"#dac0b8\", minHeight:\"100vh\"}}>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* User infos */}\r\n            <Grid item xs={12} /*md={4} lg={3}*/>\r\n              <Paper className={clsx(classes.paper, classes.fixedHeight)}>\r\n                <UserInfo name={userInfo.name}/>\r\n              </Paper>\r\n            </Grid>\r\n            {/* Tickets */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Tickets />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}></Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}