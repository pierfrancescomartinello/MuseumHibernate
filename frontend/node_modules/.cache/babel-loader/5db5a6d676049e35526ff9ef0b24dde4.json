{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Tickets.js\";\nimport React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'; // Generate Order Data\n\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return {\n    id,\n    date,\n    name,\n    shipTo,\n    paymentMethod,\n    amount\n  };\n}\n\nconst rows = [createData(2310, \"2021-02-01\", \"2020-12-27\", \"Adult\", String(8.99)\n/*button to use the ticket */\n)];\nexport default function Orders() {\n  // empty list\n  let tickets = [];\n  const [visitorId, setVisitorId] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [visitDate, setVisitDate] = useState(\"\");\n  const [ticketType, setTicketType] = useState(\"\");\n  const [ticketPrice, setTicketPrice] = useState(\"\");\n  const [isUsable, setIsUsable] = useState(\"\");\n  let email = window.location.pathname.replace(\"/dashboard/\", \"\");\n  let visitorIdURL = fetch(\"/login/userInfo/visitorId?email=\" + email);\n  visitorIdURL.then(visitorIdURL => {\n    return visitorIdURL.json();\n  }).then(visitorIdP => {\n    const visitorId = visitorIdP[0];\n    setVisitorId(visitorId);\n  });\n  let purchaseDateURL = fetch(\"/login/ticketInfo/purchaseDate?visitorId=93\");\n  purchaseDateURL.then(purchaseDateURL => {\n    return purchaseDateURL.json();\n  }).then(pDate => {\n    const purchaseDate = pDate[0];\n    console.log(pDate.length);\n    setPurchaseDate(purchaseDate);\n  });\n  let visitDateURL = fetch(\"/login/ticketInfo/visitDate?visitorId=93\");\n  visitDateURL.then(visitDateURL => {\n    return visitDateURL.json();\n  }).then(vDate => {\n    const visitDate = vDate[0];\n    setVisitDate(visitDate);\n  });\n  let ticketTypeURL = fetch(\"/login/ticketInfo/ticketType?visitorId=93\");\n  ticketTypeURL.then(ticketTypeURL => {\n    return ticketTypeURL.json();\n  }).then(tType => {\n    const ticketType = tType[0];\n    setTicketType(ticketType);\n  });\n  let ticketPriceURL = fetch(\"/login/ticketInfo/ticketPrice?visitorId=93\");\n  ticketPriceURL.then(ticketPriceURL => {\n    return ticketPriceURL.json();\n  }).then(tPrice => {\n    const ticketPrice = tPrice[0];\n    setTicketPrice(parseFloat(ticketPrice));\n  });\n  let usabilityURL = fetch(\"/login/ticketInfo/isUsable?visitorId=93\");\n  usabilityURL.then(usabilityURL => {\n    return usabilityURL.json();\n  }).then(tUsable => {\n    const isUsable = tUsable[0];\n    setIsUsable(isUsable);\n  });\n  let aTicket = {\n    \"purchaseDate\": purchaseDate,\n    \"visitDate\": visitDate,\n    \"ticketType\": ticketType,\n    \"ticketPrice\": ticketPrice,\n    \"isUsable\": isUsable\n  };\n  tickets.push(aTicket);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h3\",\n    variant: \"h5\",\n    style: {\n      color: \"#c16b53\",\n      fontWeight: \"bold\",\n      paddingLeft: \"7px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Your tickets\"), /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    style: {\n      maxWidth: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 24\n    }\n  }, \"Purchase date\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 24\n    }\n  }, \"Visit date\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 24\n    }\n  }, \"Ticket type\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 24\n    }\n  }, \"Ticket price\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    style: {\n      paddingRight: \"5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 67\n    }\n  }, \"Use\")))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, tickets.map(ticket => /*#__PURE__*/React.createElement(TableRow, {\n    key: ticket.purchaseDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, ticket.purchaseDate), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, ticket.visitDate), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, ticket.ticketType), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, ticket.ticketPrice), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, ticket.isUsable), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    style: {\n      paddingRight: \"3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 69\n    }\n  })))))));\n}","map":{"version":3,"sources":["C:/Users/Impasse/Documents/workspace-spring-tool-suite-4-4.9.0.RELEASE/Museum/frontend/src/components/Dashboard/Tickets.js"],"names":["React","useState","Table","TableBody","TableCell","TableHead","TableRow","Typography","Button","createData","id","date","name","shipTo","paymentMethod","amount","rows","String","Orders","tickets","visitorId","setVisitorId","purchaseDate","setPurchaseDate","visitDate","setVisitDate","ticketType","setTicketType","ticketPrice","setTicketPrice","isUsable","setIsUsable","email","window","location","pathname","replace","visitorIdURL","fetch","then","json","visitorIdP","purchaseDateURL","pDate","console","log","length","visitDateURL","vDate","ticketTypeURL","tType","ticketPriceURL","tPrice","parseFloat","usabilityURL","tUsable","aTicket","push","color","fontWeight","paddingLeft","maxWidth","paddingRight","map","ticket"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(2310, \"2021-02-01\", \"2020-12-27\", \"Adult\", String(8.99), /*button to use the ticket */),\n];\n\n\n\nexport default function Orders() {\n  // empty list\n  let tickets = [];\n\n  const [visitorId, setVisitorId] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [visitDate, setVisitDate] = useState(\"\");\n  const [ticketType, setTicketType] = useState(\"\");\n  const [ticketPrice, setTicketPrice] = useState(\"\");\n  const [isUsable, setIsUsable] = useState(\"\");\n\n  let email = (window.location.pathname.replace(\"/dashboard/\", \"\"));\n  \n  let visitorIdURL = fetch(\"/login/userInfo/visitorId?email=\" + email);\n\n  visitorIdURL.then(visitorIdURL => {\n    return visitorIdURL.json();\n  }).then(visitorIdP => {\n    const visitorId = visitorIdP[0]\n    setVisitorId(visitorId)\n  })\n  \n  \n  let purchaseDateURL = fetch(\"/login/ticketInfo/purchaseDate?visitorId=93\");\n  \n  purchaseDateURL.then(purchaseDateURL => {\n    return purchaseDateURL.json();\n  }).then(pDate => {\n    const purchaseDate = pDate[0]\n    console.log(pDate.length)\n    setPurchaseDate(purchaseDate)\n  })\n\n\n  let visitDateURL = fetch(\"/login/ticketInfo/visitDate?visitorId=93\");\n\n  visitDateURL.then(visitDateURL => {\n    return visitDateURL.json();\n  }).then(vDate => {\n    const visitDate = vDate[0]\n    setVisitDate(visitDate)\n  })\n\n\n  let ticketTypeURL = fetch(\"/login/ticketInfo/ticketType?visitorId=93\");\n  \n  ticketTypeURL.then(ticketTypeURL => {\n    return ticketTypeURL.json();\n  }).then(tType => {\n    const ticketType = tType[0]\n    setTicketType(ticketType)\n  })\n  \n\n  let ticketPriceURL = fetch(\"/login/ticketInfo/ticketPrice?visitorId=93\");\n  \n  ticketPriceURL.then(ticketPriceURL => {\n    return ticketPriceURL.json();\n  }).then(tPrice => {\n    const ticketPrice = tPrice[0]\n    setTicketPrice(parseFloat(ticketPrice))\n  })\n  \n  let usabilityURL = fetch(\"/login/ticketInfo/isUsable?visitorId=93\");\n  \n  usabilityURL.then(usabilityURL => {\n    return usabilityURL.json();\n  }).then(tUsable => {\n    const isUsable = tUsable[0]\n    setIsUsable(isUsable)\n  })\n    \n\n\n  let aTicket = {\n    \"purchaseDate\" : purchaseDate,\n    \"visitDate\" : visitDate,\n    \"ticketType\" : ticketType,\n    \"ticketPrice\" : ticketPrice,\n    \"isUsable\" : isUsable\n  }\n\n  tickets.push(aTicket);\n  \n  \n\n  return (\n    <React.Fragment>\n      <Typography component=\"h3\" variant=\"h5\" style={{ color: \"#c16b53\", fontWeight: \"bold\", paddingLeft: \"7px\" }}>\n        Your tickets\n      </Typography>\n      <Table size=\"small\" style={{maxWidth: \"100%\"}}>\n        <TableHead>\n          <TableRow>\n            <TableCell><b>Purchase date</b></TableCell>\n            <TableCell><b>Visit date</b></TableCell>\n            <TableCell><b>Ticket type</b></TableCell>\n            <TableCell><b>Ticket price</b></TableCell>\n            <TableCell align=\"right\" style={{paddingRight: \"5%\"}}><b>Use</b></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tickets.map((ticket) => (\n            <TableRow key={ticket.purchaseDate}>\n              <TableCell>{ticket.purchaseDate}</TableCell>\n              <TableCell>{ticket.visitDate}</TableCell>\n              <TableCell>{ticket.ticketType}</TableCell>\n              <TableCell>{ticket.ticketPrice}</TableCell>\n              <TableCell>{ticket.isUsable}</TableCell>\n              <TableCell align=\"right\" style={{paddingRight: \"3%\"}}><Button /></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}