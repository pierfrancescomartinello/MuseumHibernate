{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Impasse\\\\Documents\\\\workspace-spring-tool-suite-4-4.9.0.RELEASE\\\\Museum\\\\frontend\\\\src\\\\components\\\\LoginForm.js\";\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst TextFieldEmail = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const handleClick = () => {\n    let url = \"login?email=\" + email + \"&password=\" + password;\n    let settings = {\n      method: \"Get\"\n    };\n    fetch(url, settings).then(res => res.json()).then(json => {\n      if (json == false) console.log(\"paroczz\");\n    });\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    autoComplete: \"current-email\",\n    autoFocus: true,\n    value: email,\n    onChange: event => {\n      setEmail(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    autoFocus: true,\n    value: password,\n    onChange: event => {\n      setPassword(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      value: \"remember\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }),\n    label: \"Remember me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\" //  className={classes.submit}\n    ,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Sign In\"));\n};\n\nexport default TextFieldEmail;","map":{"version":3,"sources":["C:/Users/Impasse/Documents/workspace-spring-tool-suite-4-4.9.0.RELEASE/Museum/frontend/src/components/LoginForm.js"],"names":["React","useState","Button","TextField","FormControlLabel","Checkbox","TextFieldEmail","email","setEmail","password","setPassword","handleClick","url","settings","method","fetch","then","res","json","console","log","event","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA,oBACCL,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QAClBM,KADkB;AAAA,QACXC,QADW;;AAAA,qBAEOP,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,QAElBQ,QAFkB;AAAA,QAERC,WAFQ;;AAIzB,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIC,GAAG,GAAG,iBAAiBL,KAAjB,GAAyB,YAAzB,GAAwCE,QAAlD;AAEA,QAAII,QAAQ,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAf;AAEAC,IAAAA,KAAK,CAACH,GAAD,EAAMC,QAAN,CAAL,CACKG,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWE,IAAD,IAAU;AACd,UAAIA,IAAI,IAAI,KAAZ,EACEC,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KALL;AAOD,GAZD;;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,YAAY,EAAC,eAPf;AAQE,IAAA,SAAS,MARX;AASE,IAAA,KAAK,EAAEb,KATT;AAUE,IAAA,QAAQ,EAAGc,KAAD,IAAW;AAACb,MAAAA,QAAQ,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AAA6B,KAVrD,CAUuD;AAVvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,IAAI,EAAC,UANP;AAOE,IAAA,EAAE,EAAC,UAPL;AAQE,IAAA,YAAY,EAAC,kBARf;AASE,IAAA,SAAS,MATX;AAUE,IAAA,KAAK,EAAEd,QAVT;AAWE,IAAA,QAAQ,EAAGY,KAAD,IAAW;AAACX,MAAAA,WAAW,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AAAgC,KAXxD,CAW0D;AAX1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EA0BE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADX;AAEE,IAAA,KAAK,EAAC,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,EA8BE,oBAAC,MAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR,CAIA;AAJA;AAKE,IAAA,OAAO,EAAEZ,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA9BF,CADF;AA0CD,CA5DH;;AA6DE,eAAeL,cAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst TextFieldEmail = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleClick = () => {\r\n      let url = \"login?email=\" + email + \"&password=\" + password;\r\n      \r\n      let settings = { method: \"Get\" };\r\n    \r\n      fetch(url, settings)\r\n          .then(res => res.json())\r\n          .then((json) => {\r\n            if (json == false)\r\n              console.log(\"paroczz\")\r\n          });\r\n      \r\n    };\r\n  \r\n    return (\r\n      <form>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          autoComplete=\"current-email\"\r\n          autoFocus\r\n          value={email}\r\n          onChange={(event) => {setEmail(event.target.value)}} //whenever the text field change, you save the value in state\r\n         />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          autoFocus\r\n          value={password}\r\n          onChange={(event) => {setPassword(event.target.value)}} //whenever the text field change, you save the value in state\r\n         />\r\n        <FormControlLabel\r\n          control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n          label=\"Remember me\"\r\n        />\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        //  className={classes.submit}\r\n          onClick={handleClick}\r\n        >\r\n          Sign In\r\n        </Button>\r\n    </form>\r\n    );\r\n  };\r\n  export default TextFieldEmail;"]},"metadata":{},"sourceType":"module"}